

#cmake_package 'communication/adrf' # Not part of the public stuff yet
#cmake_package 'simulation/mars-plugins/multisim_plugin' #where is it gone?!

def mars_package(srcDir,type = :cmake_package)
    if Gem::Version.new(Autobuild::VERSION) <= Gem::Version.new('1.7.2')
        mars_path="simulation/mars/"
        send(type,srcDir) do |pkg|
            pkg.srcdir = mars_path
            pkg.post_import do
                pkg.srcdir = srcDir
                Autoproj.manifest.load_package_manifest(pkg.name)
            end
            yield pkg if block_given?
        end
    else
        send(type,srcDir) do |pkg|
            pkg.importdir = "simulation/mars/"
            yield pkg if block_given?
        end
    end
end

#This package is only known and needed on master
only_in_flavor 'master' do 
    mars_package("simulation/mars/urdf_loader")
    mars_package("simulation/mars/scripts/cmake")
    mars_package("simulation/mars/plugins/Text3D")
    mars_package("simulation/mars/common/graphics/osg_text")
    mars_package("simulation/mars/common/graphics/osg_text_factory")
    mars_package("simulation/mars/common/graphics/osg_lines")
end

in_flavor 'master','next','stable' do
    mars_package("simulation/mars/common/lib_manager")
    mars_package("simulation/mars/common/cfg_manager")
    mars_package("simulation/mars/common/gui/main_gui")
    mars_package("simulation/mars/common/data_broker")
    mars_package("simulation/mars/common/gui/cfg_manager_gui")
    mars_package("simulation/mars/common/gui/lib_manager_gui")
    mars_package("simulation/mars/common/gui/log_console")
    mars_package("simulation/mars/common/gui/data_broker_gui")
    mars_package("simulation/mars/common/gui/data_broker_plotter")
    mars_package("simulation/mars/common/utils")
    mars_package("simulation/mars/interfaces")
    mars_package("simulation/mars/sim") do |pkg|
        #Define that mars should use the following path as default for it's configuration
        #to enable the autostart of mars
        pkg.define "DEFAULT_CONFIG_DIR", File.join(Autobuild.prefix,"configuration","mars_default")
    end
    mars_package("simulation/mars/gui")
    mars_package("simulation/mars/graphics")
    mars_package("simulation/mars/app") do |pkg|
        pkg.define "DEFAULT_CONFIG_DIR", File.join(Autobuild.prefix,"configuration","mars_default")
    end
    mars_package("simulation/mars/viz")
    mars_package("simulation/mars/scene_loader")
    mars_package("simulation/mars/plugins/connexion_plugin")
    mars_package("simulation/mars/plugins/constraint_plugin")
    
    mars_package("simulation/mars/doc",:import_package) do |pkg|
        pkg.doc_task do
            pkg.progress_start "generating Documentation for for mars/doc", :done_message => 'generated_documentation for mars/doc' do
                Autobuild::Subprocess.run(pkg, 'doc', Autobuild.tool(:make), "-C#{File.join(pkg.srcdir)}", 'doc')
            end
        end
        pkg.doc_dir = 'doxygen/html'
    end
    
end


in_flavor 'master','next','stable' do
    cmake_package 'external/minizip'
    autotools_package 'simulation/ode' do |pkg|
        pkg.depends_on 'libtool'
        pkg.depends_on 'automake1.10'
        pkg.provides "pkgconfig/ode"
        pkg.configureflags <<
            "--enable-double-precision" <<
            "--disable-demos" <<
            "--enable-malloc" <<
            "--with-drawstuff=none" <<
            "CFLAGS=-fPIC -O2 -Wall" <<
            "CXXFLAGS=-fPIC -O2 -Wall"
    end
    Autoproj.add_osdeps_overrides 'external/ode', :package => 'simulation/ode'
end
